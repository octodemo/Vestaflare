# Node.js Development Environment Variables
# Copy this file to .env and fill in your actual values

# Server Configuration
PORT=8123
ENVIRONMENT=development

# MCP Server Configuration
MCP_SERVER_NAME=mcp-server
MCP_SERVER_VERSION=1.0.0
# Name of the HTTP header used to pass session IDs (not the session ID value itself)
MCP_SESSION_HEADER_NAME=mcp-session-id

# Weather API Configuration (for example weather tools)
WEATHER_API_BASE_URL=https://api.weather.gov
USER_AGENT=weather-app/1.0

# API Keys (add as needed for your MCP tools)
# WEATHER_API_KEY=your_weather_api_key_here
# OPENAI_API_KEY=your_openai_api_key_here
# GOOGLE_API_KEY=your_google_api_key_here
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Database Configuration (if needed)
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname
# REDIS_URL=redis://localhost:6379

# External Service URLs (if needed)
# EXTERNAL_API_URL=https://api.example.com
# WEBHOOK_BASE_URL=https://your-domain.com

# Feature Flags
# ENABLE_LOGGING=true
# ENABLE_CORS=true
# ENABLE_DEBUG_MODE=false

# Security Configuration
# JWT_SECRET=your_jwt_secret_here
# API_KEY_HEADER=x-api-key

# MCP Authentication Configuration
# Set to true to require API key authentication for MCP requests
MCP_AUTH_REQUIRED=false
# API key that clients must provide to access the MCP server
# MCP_API_KEY=your_secure_api_key_here
# Header name to check for the API key (supports both Bearer token and direct key formats)
MCP_AUTH_HEADER_NAME=Authorization

# CORS Configuration
# CORS_ORIGIN=*
# CORS_METHODS=GET,POST,OPTIONS
# CORS_HEADERS=Content-Type,mcp-session-id

# Logging Configuration
# LOG_LEVEL=info
# LOG_FORMAT=combined